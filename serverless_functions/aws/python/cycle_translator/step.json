{
  "Comment": "An Amazon States Machine that recognizes text, translates it and logs translation",
  "StartAt": "Input definition",
  "States": {
    "Input definition": {
      "Type": "Pass",
      "Result": {
        "Payload": {
          "Sentences": [
            "ciao, questo Ã¨ un esempio di testo da tradurre",
            "hello, this is an example of already translated text"
          ],
          "NextIterationCounter": 0
        }
      },
      "ResultPath": "$.Iterator",
      "Next": "Loop entrance"
    },
    "Loop entrance": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "__PLACEHOLDER__",
        "Payload": {
          "Sentences.$": "$.Iterator.Payload.Sentences",
          "NextIterationCounter.$": "$.Iterator.Payload.NextIterationCounter"
        }
      },
      "ResultPath": "$.Iterator",
      "Next": "Loop entrance choice"
    },
    "Loop entrance choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Iterator.Payload",
          "StringEquals": "Error",
          "Next": "Error"
        }
      ],
      "Default": "Detect language"
    },
    "Detect language": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "__PLACEHOLDER__",
        "Payload": {
          "sentence.$": "$.Iterator.Payload.CurrentSentence"
        }
      },
      "ResultPath": "$.LanguageDetection",
      "Next": "Language choice"
    },
    "Language choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.LanguageDetection.Payload",
          "StringEquals": "Error",
          "Next": "Error"
        },
        {
          "Variable": "$.LanguageDetection.Payload.language",
          "StringEquals": "en",
          "Next": "Translation log preamble"
        }
      ],
      "Default": "Sentence translation"
    },
    "Sentence translation": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "__PLACEHOLDER__",
        "Payload": {
          "sentence.$": "$.LanguageDetection.Payload.sentence",
          "language_code.$": "$.LanguageDetection.Payload.language"
        }
      },
      "ResultPath": "$.SentenceTranslation",
      "Next": "Sentence choice"
    },
    "Sentence choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.SentenceTranslation.Payload",
          "StringEquals": "Error",
          "Next": "Error"
        }
      ],
      "Default": "Translation log"
    },
    "Translation log preamble": {
      "Type": "Pass",
      "Parameters": {
        "Payload": {
          "sentence.$": "$.LanguageDetection.Payload.sentence"
        }
      },
      "ResultPath": "$.SentenceTranslation",
      "Next": "Translation log"
    },
    "Translation log": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "__PLACEHOLDER__",
        "Payload": {
          "original_sentence.$": "$.LanguageDetection.Payload.sentence",
          "original_language_code.$": "$.LanguageDetection.Payload.language",
          "translated_sentence.$": "$.SentenceTranslation.Payload.sentence",
          "logging_bucket_name": "benchmarking-project-translator-logging-bucket"
        }
      },
      "ResultPath": "$.TranslationLog",
      "Next": "Translation log choice"
    },
    "Translation log choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.TranslationLog.Payload",
          "StringEquals": "Error",
          "Next": "Error"
        }
      ],
      "Default": "Iteration checker"
    },
    "Iteration checker": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Iterator.Payload.EndNext",
          "BooleanEquals": true,
          "Next": "Completion"
        }
      ],
      "Default": "Loop entrance"
    },
    "Error": {
      "Type": "Pass",
      "Result": "An error occurred, please check passed arguments",
      "End": true
    },
    "Completion": {
      "Type": "Pass",
      "Result": "Translations completed: check logs",
      "End": true
    }
  }
}